/*
 * This file is part of the µOS++ distribution.
 *   (https://github.com/micro-os-plus)
 * Copyright (c) 2016-2023 Liviu Ionescu. All rights reserved.
 *
 * Permission to use, copy, modify, and/or distribute this software
 * for any purpose is hereby granted, under the terms of the MIT license.
 *
 * If a copy of the license was not distributed with this file, it can
 * be obtained from https://opensource.org/licenses/mit/.
 */

// ----------------------------------------------------------------------------

/**
 @defgroup cmsis-plus-app-config-cmdline Command Line Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions passed via the compiler command line.
 @details
 Most of the configuration options can be passed via the configuration file,
 but this requires each source file to include the configuration files.
 However some options are too important to be missed and should be
 passed via the compiler command line.
 */

/**
 @defgroup cmsis-plus-app-config-startup Start-up & General Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions used to configure the program start-up.
 @details
 */

/**
 @defgroup cmsis-plus-app-config-mem Memory Management Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions used to configure the memory management features.
 @details
 */

/**
 @defgroup cmsis-plus-app-config-lib Library Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions used to configure various library options.
 @details
 */

/**
 @defgroup cmsis-plus-app-config-rtos RTOS Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions used to configure the RTOS.
 @details
 */

/**
 @defgroup cmsis-plus-app-config-trace Trace Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions used to configure the trace channel.
 @details
 In addition to the global `TRACE` definition, it is possible to
 enable individual groups of messages, using separate definitions.
 */

/**
 @defgroup cmsis-plus-app-config-port Custom RTOS Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions used to select various custom RTOS port implementations.
 @details
 The µOS++ RTOS API can be configured to run on top of another
 RTOS scheduler (like FreeRTOS). It is also possible to select
 each synchronisation objects to use either the custom port objects or
 the µOS++ reference C++ implementations.
 */

/**
 @defgroup cmsis-plus-app-config-info Informative Options
 @ingroup cmsis-plus-app-config
 @brief  Definitions passed back to the application.
 @details
 Definitions originated in the µOS++ headers, useful to the application.
 */

// ----------------------------------------------------------------------------
